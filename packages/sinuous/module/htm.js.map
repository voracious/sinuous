{"version":3,"file":"htm.js","sources":["../htm/src/build.js","../htm/src/index.js"],"sourcesContent":["import { MINI } from './constants.js';\n\nconst MODE_SLASH = 0;\nconst MODE_TEXT = 1;\nconst MODE_WHITESPACE = 2;\nconst MODE_TAGNAME = 3;\nconst MODE_COMMENT = 4;\nconst MODE_PROP_SET = 5;\nconst MODE_PROP_APPEND = 6;\n\nconst TAG_SET = 1;\nconst CHILD_APPEND = 0;\nconst CHILD_RECURSE = 2;\nconst PROPS_ASSIGN = 3;\nconst PROP_SET = MODE_PROP_SET;\nconst PROP_APPEND = MODE_PROP_APPEND;\n\n// Turn a result of a build(...) call into a tree that is more\n// convenient to analyze and transform (e.g. Babel plugins).\n// For example:\n//  treeify(\n//    build'<div href=\"1${a}\" ...${b}><${x} /></div>`,\n//    [X, Y, Z]\n//  )\n// returns:\n//  {\n//    tag: 'div',\n//    props: [ { href: [\"1\", X] },  Y ],\n//    children: [ { tag: Z, props: [], children: [] } ]\n//  }\nexport const treeify = (built, fields) => {\n  const _treeify = built => {\n    let tag = '';\n    let currentProps = null;\n    const props = [];\n    const children = [];\n\n    for (let i = 1; i < built.length; i++) {\n      const field = built[i++];\n      const value = typeof field === 'number' ? fields[field - 1] : field;\n\n      if (built[i] === TAG_SET) {\n        tag = value;\n      }\n      else if (built[i] === PROPS_ASSIGN) {\n        props.push(value);\n        currentProps = null;\n      }\n      else if (built[i] === PROP_SET) {\n        if (!currentProps) {\n          currentProps = Object.create(null);\n          props.push(currentProps);\n        }\n        currentProps[built[++i]] = [value];\n      }\n      else if (built[i] === PROP_APPEND) {\n        currentProps[built[++i]].push(value);\n      }\n      else if (built[i] === CHILD_RECURSE) {\n        children.push(_treeify(value));\n      }\n      else if (built[i] === CHILD_APPEND) {\n        children.push(value);\n      }\n    }\n\n    return { tag, props, children };\n  };\n  const { children } = _treeify(built);\n  return children.length > 1 ? children : children[0];\n};\n\n\nexport const evaluate = (h, built, fields, args) => {\n  let propBody = {};\n  for (let i = 1; i < built.length; i++) {\n    const field = built[i];\n    const value = typeof field === 'number' ? fields[field] : field;\n    const type = built[++i];\n\n    if (type === TAG_SET) {\n      args[0] = value;\n    }\n    else if (type === PROPS_ASSIGN) {\n      args[1] = Object.assign(args[1] || {}, value);\n    }\n    else if (type === PROP_SET) {\n      (args[1] = args[1] || {})[built[++i]] = value;\n    }\n    else if (type === PROP_APPEND) {\n      let key = built[++i];\n      let prev = (args[1] = args[1] || {})[key];\n      let parts = propBody[key];\n\n      if (!parts && (typeof value === 'function' || typeof prev === 'function')) {\n        parts = (prev && [prev]) || [];\n\n        args[1][key] = function() {\n          let prop = '';\n          for (var j = 0; j < parts.length; j++) {\n            prop += typeof parts[j] === 'function' ? parts[j].call(this) : parts[j];\n          }\n          return prop;\n        };\n      }\n\n      if (parts) {\n        parts.push(value);\n      } else {\n        args[1][key] += (value + '');\n      }\n    }\n    else if (type) {\n      // code === CHILD_RECURSE\n      const result = () => h.apply(null, evaluate(h, value, fields, ['', null]));\n\n      // if it's a component we pass the children with closure so the\n      // component is executed before the children of that component.\n      args.push(typeof args[0] === 'function' ? result : result());\n    }\n    else {\n      // code === CHILD_APPEND\n      args.push(value);\n    }\n  }\n\n  return args;\n};\n\nexport const build = function(statics) {\n  const fields = arguments;\n  const h = this;\n\n  let mode = MODE_TEXT;\n  let buffer = '';\n  let quote = '';\n  let current = [0];\n  let char, propName;\n\n  const commit = field => {\n    if (mode === MODE_TEXT && (field || (buffer = buffer.replace(/^\\s*\\n\\s*|\\s*\\n\\s*$/g,'')))) {\n      if (MINI) {\n        current.push(field ? fields[field] : buffer);\n      }\n      else {\n        current.push(field || buffer, CHILD_APPEND);\n      }\n    }\n    else if (mode === MODE_TAGNAME && (field || buffer)) {\n      if (MINI) {\n        current[1] = field ? fields[field] : buffer;\n      }\n      else {\n        current.push(field || buffer, TAG_SET);\n      }\n      mode = MODE_WHITESPACE;\n    }\n    else if (mode === MODE_WHITESPACE && buffer === '...' && field) {\n      if (MINI) {\n        current[2] = Object.assign(current[2] || {}, fields[field]);\n      }\n      else {\n        current.push(field, PROPS_ASSIGN);\n      }\n    }\n    else if (mode === MODE_WHITESPACE && buffer && !field) {\n      if (MINI) {\n        (current[2] = current[2] || {})[buffer] = true;\n      }\n      else {\n        current.push(true, PROP_SET, buffer);\n      }\n    }\n    else if (mode >= MODE_PROP_SET) {\n      if (MINI) {\n        if (mode === MODE_PROP_SET) {\n          (current[2] = current[2] || {})[propName] = field ? buffer ? (buffer + fields[field]) : fields[field] : buffer;\n          mode = MODE_PROP_APPEND;\n        }\n        else if (field || buffer) {\n          current[2][propName] += field ? buffer + fields[field] : buffer;\n        }\n      }\n      else {\n        if (buffer || (!field && mode === MODE_PROP_SET)) {\n          current.push(buffer, mode, propName);\n          mode = MODE_PROP_APPEND;\n        }\n        if (field) {\n          current.push(field, mode, propName);\n          mode = MODE_PROP_APPEND;\n        }\n      }\n    }\n\n    buffer = '';\n  };\n\n  for (let i=0; i<statics.length; i++) {\n    if (i) {\n      if (mode === MODE_TEXT) {\n        commit();\n      }\n      commit(i);\n    }\n\n    for (let j=0; j<statics[i].length;j++) {\n      char = statics[i][j];\n\n      if (mode === MODE_TEXT) {\n        if (char === '<') {\n          // commit buffer\n          commit();\n          if (MINI) {\n            current = [current, '', null];\n          }\n          else {\n            current = [current];\n          }\n          mode = MODE_TAGNAME;\n        }\n        else {\n          buffer += char;\n        }\n      }\n      else if (mode === MODE_COMMENT) {\n        // Ignore everything until the last three characters are '-', '-' and '>'\n        if (buffer === '--' && char === '>') {\n          mode = MODE_TEXT;\n          buffer = '';\n        }\n        else {\n          buffer = char + buffer[0];\n        }\n      }\n      else if (quote) {\n        if (char === quote) {\n          quote = '';\n        }\n        else {\n          buffer += char;\n        }\n      }\n      else if (char === '\"' || char === \"'\") {\n        quote = char;\n      }\n      else if (char === '>') {\n        commit();\n        mode = MODE_TEXT;\n      }\n      else if (!mode) {\n        // Ignore everything until the tag ends\n      }\n      else if (char === '=') {\n        mode = MODE_PROP_SET;\n        propName = buffer;\n        buffer = '';\n      }\n      else if (char === '/' && (mode < MODE_PROP_SET || statics[i][j+1] === '>')) {\n        commit();\n        if (mode === MODE_TAGNAME) {\n          current = current[0];\n        }\n        mode = current;\n        if (MINI) {\n          (current = current[0]).push(h.apply(null, mode.slice(1)));\n        }\n        else {\n          (current = current[0]).push(mode, CHILD_RECURSE);\n        }\n        mode = MODE_SLASH;\n      }\n      else if (char === ' ' || char === '\\t' || char === '\\n' || char === '\\r') {\n        // <a disabled>\n        commit();\n        mode = MODE_WHITESPACE;\n      }\n      else {\n        buffer += char;\n      }\n\n      if (mode === MODE_TAGNAME && buffer === '!--') {\n        mode = MODE_COMMENT;\n        current = current[0];\n      }\n    }\n  }\n  commit();\n\n  if (MINI) {\n    return current.length > 2 ? current.slice(1) : current[1];\n  }\n  return current;\n};\n","/**\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MINI } from './constants.js';\nimport { build, evaluate } from './build.js';\n\nconst CACHES = new Map();\n\nconst regular = function(statics) {\n  let tmp = CACHES.get(this);\n  if (!tmp) {\n    tmp = new Map();\n    CACHES.set(this, tmp);\n  }\n  tmp = evaluate(this, tmp.get(statics) || (tmp.set(statics, tmp = build(statics)), tmp), arguments, []);\n  return tmp.length > 1 ? tmp : tmp[0];\n};\n\nconst custom = function() {\n  const result = (MINI ? build : regular).apply(this, arguments);\n  if (result) {\n    return Array.isArray(result)\n      ? this(result)\n      : typeof result === 'object'\n      ? result\n      : this([result]);\n  }\n};\n\nconst wrapper = function() {\n  const h = custom.bind(this);\n  return (this.wrap || h).apply(h, arguments);\n};\n\nexport default wrapper;\n"],"names":["h","built","fields","args","propBody","i","length","value","field","type","Object","assign","key","prev","parts","prop","j","call","this","push","apply","evaluate","result","build","statics","char","propName","mode","buffer","quote","current","replace","commit","CACHES","Map","regular","tmp","get","set","arguments","custom","Array","isArray","wrapper","bind","wrap"],"mappings":"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"}