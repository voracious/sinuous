{"version":3,"file":"hydrate.js","sources":["../hydrate/src/hydrate.js","../hydrate/src/index.js"],"sourcesContent":["import { h, hs, api } from 'sinuous';\n\nexport const _ = {};\n\nlet isHydrated;\n\n/**\n * Create a sinuous `treeify` function.\n * @param  {boolean} isSvg\n * @return {Function}\n */\nexport function context(isSvg) {\n  return function() {\n    if (isHydrated) {\n      // Hydrate on first pass, create on the rest.\n      return (isSvg ? hs : h).apply(null, arguments);\n    }\n\n    let vnode;\n\n    function item(arg) {\n      if (arg == null);\n      else if (arg === _ || typeof arg === 'function') {\n        // Components can only be the first argument.\n        if (vnode) {\n          addChild(vnode, arg);\n        } else {\n          vnode = { type: arg, _children: [] };\n        }\n      } else if (Array.isArray(arg)) {\n        vnode = vnode || { _children: [] };\n        arg.forEach(item);\n\n      } else if (typeof arg === 'object') {\n        if (arg._children) {\n          addChild(vnode, arg);\n        } else {\n          vnode._props = arg;\n        }\n      } else {\n        // The rest is made into a string.\n        if (vnode) {\n          addChild(vnode, { type: null, _props: arg });\n        } else {\n          vnode = { type: arg, _children: [] };\n        }\n      }\n\n      if (isSvg) vnode._isSvg = isSvg;\n    }\n\n    function addChild(parent, child) {\n      parent._children.push(child);\n      child._parent = parent;\n    }\n\n    Array.from(arguments).forEach(item);\n\n    return vnode;\n  };\n}\n\n/**\n * Hydrates the root node with a passed delta tree structure.\n *\n * `delta` looks like:\n * {\n *   type: 'div',\n *   _props: { class: '' },\n *   _children: []\n * }\n *\n * @param  {object} delta\n * @param  {Node} [root]\n * @return {Node} Returns the `root`.\n */\nexport function hydrate(delta, root) {\n  if (!delta) {\n    return;\n  }\n\n  if (typeof delta.type === 'function') {\n    // Support Components\n    delta = delta.type.apply(null, [delta._props]\n      .concat(delta._children.map(c => c())));\n  }\n\n  let isFragment = delta.type === undefined;\n  let isRootFragment;\n  let el;\n\n  if (!root) {\n    root = document.querySelector(findRootSelector(delta));\n  }\n\n  function findRootSelector(delta) {\n    let selector = '';\n    let prop;\n    if (delta._props && (prop = delta._props.id)) {\n      selector = '#';\n    } else if (delta._props && (prop = delta._props.class)) {\n      selector = '.';\n    } else if ((prop = delta.type)){\n      // delta.type is truthy\n    } else {\n      isRootFragment = true;\n      return delta._children && findRootSelector(delta._children[0]());\n    }\n\n    return (\n      selector +\n      (typeof prop === 'function' ? prop() : prop)\n        .split(' ')\n        // Escape CSS selector https://bit.ly/36h9I83\n        .map(sel => sel.replace(/([^\\x80-\\uFFFF\\w-])/g, '\\\\$1'))\n        .join('.')\n    );\n  }\n\n  function item(arg) {\n    if (arg instanceof Node) {\n      el = arg;\n      // Keep a child pointer for multiple hydrate calls per element.\n      el._index = el._index || 0;\n    } else if (Array.isArray(arg)) {\n      arg.forEach(item);\n    } else if (el) {\n      let target = filterChildNodes(el)[el._index];\n      let current;\n      let prefix;\n\n      const updateText = text => {\n        el._index++;\n\n        // Leave whitespace alone.\n        if (target.data.trim() !== text.trim()) {\n          if (arg._parent._children.length !== filterChildNodes(el).length) {\n            // If the parent's virtual children length don't match the DOM's,\n            // it's probably adjacent text nodes stuck together. Split them.\n            target.splitText(target.data.indexOf(text) + text.length);\n            if (current) {\n              // Leave prefix whitespace intact.\n              prefix = current.match(/^\\s*/)[0];\n            }\n          }\n          // Leave whitespace alone.\n          if (target.data.trim() !== text.trim()) {\n            target.data = text;\n          }\n        }\n      };\n\n      if (target) {\n        // Skip placeholder underscore.\n        if (arg === _) {\n          el._index++;\n        } else if (typeof arg === 'object') {\n          if (arg.type === null && target.nodeType === 3) {\n            // This is a text vnode, add noskip so spaces don't get skipped.\n            target._noskip = true;\n            updateText(arg._props);\n          } else if (arg.type) {\n            hydrate(arg, target);\n            el._index++;\n          }\n        }\n      }\n\n      if (typeof arg === 'function') {\n        current = target ? target.data : undefined;\n        prefix = '';\n        let hydrated;\n        let marker;\n        let startNode;\n        api.subscribe(() => {\n          isHydrated = hydrated;\n\n          let result = arg();\n          if (result && result._children) {\n            result = result.type\n              ? result\n              : result._children;\n          }\n\n          const isStringable =\n            typeof result === 'string' || typeof result === 'number';\n          result = isStringable ? prefix + result : result;\n\n          if (hydrated || (!target && !isFragment)) {\n            current = api.insert(el, result, marker, current, startNode);\n          } else {\n            if (isStringable) {\n              updateText(result);\n            } else {\n              if (Array.isArray(result)) {\n                startNode = target;\n                target = el;\n              }\n\n              if (isRootFragment) {\n                target = el;\n              }\n\n              hydrate(result, target);\n              current = [];\n            }\n\n            if (!isRootFragment && target) {\n              marker = api.add(el, '', filterChildNodes(el)[el._index]);\n            } else {\n              marker = api.add(el.parentNode, '', el.nextSibling);\n            }\n          }\n\n          isHydrated = false;\n          hydrated = true;\n        });\n      } else if (typeof arg === 'object') {\n        if (!arg._children) {\n          api.property(el, arg, null, delta._isSvg);\n        }\n      }\n    }\n  }\n\n  [root, delta._props, delta._children || delta].forEach(item);\n\n  return el;\n}\n\n/**\n * Filter out whitespace text nodes unless it has a noskip indicator.\n *\n * @param  {Node} parent\n * @return {Array}\n */\nfunction filterChildNodes(parent) {\n  return Array.from(parent.childNodes).filter(\n    el => el.nodeType !== 3 || el.data.trim() || el._noskip\n  );\n}\n","import htm from 'sinuous/htm';\nimport { context } from './hydrate.js';\nexport { hydrate, _ } from './hydrate.js';\n\nexport const d = context();\nexport const ds = context(true);\n\n// `export const html = htm.bind(h)` is not tree-shakeable!\nexport function dhtml() {\n  return htm.apply(d, arguments);\n}\n\n// `export const svg = htm.bind(hs)` is not tree-shakeable!\nexport function dsvg() {\n  return htm.apply(ds, arguments);\n}\n"],"names":["isHydrated","context","isSvg","hs","h","apply","arguments","vnode","item","arg","_","addChild","type","_children","Array","isArray","forEach","_props","_isSvg","parent","child","push","_parent","from","hydrate","delta","root","concat","map","c","isRootFragment","el","isFragment","undefined","document","querySelector","findRootSelector","prop","selector","id","class","split","sel","replace","join","Node","_index","current","prefix","target","filterChildNodes","text","data","trim","length","splitText","indexOf","match","nodeType","_noskip","updateText","hydrated","marker","startNode","api","subscribe","result","isStringable","insert","add","parentNode","nextSibling","property","childNodes","filter","ds","dhtml","htm","d","dsvg"],"mappings":"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"}