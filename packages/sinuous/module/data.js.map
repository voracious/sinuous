{"version":3,"file":"data.js","sources":["../data/src/data.js"],"sourcesContent":["import { api } from 'sinuous';\nimport { template as tpl, t } from 'sinuous/template';\n\nconst createAction = api.action;\napi.action = (action, props, keyedActions) => {\n  const handleAction = (propNameArg, runAction) => {\n    return (key, i, keys) => {\n      let propName = propNameArg || (keys && key);\n      // If the field is a plain object, the `_` key is the element content.\n      // For `sinuous/data` e.g. data-bind=\"this:my\" refers to the current element.\n      if (propName === '_' || propName === 'this') propName = null;\n\n      return runAction(key, propName);\n    };\n  };\n\n  return (key, propName) => {\n    let elProps = props[key];\n    if (\n      elProps &&\n      typeof elProps === 'object' &&\n      !elProps.nodeType && // not a Node\n      !elProps.length // not an Array\n    ) {\n      const execAction = handleAction(\n        propName,\n        createAction(action, elProps, keyedActions)\n      );\n      Object.keys(elProps).forEach(execAction);\n    } else {\n      const execAction = handleAction(\n        propName,\n        createAction(action, props, keyedActions)\n      );\n      execAction(key);\n    }\n  };\n};\n\nexport function fill(elementRef) {\n  return template(elementRef, true);\n}\n\n/**\n * Creates a template function.\n * @param   {string} elementRef\n * @param   {boolean} noclone\n * @return  {Function}\n */\nexport function template(elementRef, noclone) {\n  return tpl(() => {\n    let fragment = document.querySelector(elementRef);\n    return recordDataAttributes(fragment);\n  }, noclone);\n}\n\nconst tags = ['t', 'o', 'bind'];\n\nfunction recordDataAttributes(fragment) {\n  const root = fragment.content || fragment;\n  let index = 0;\n  [fragment]\n    .concat(Array.from(root.querySelectorAll('[data-t],[data-o],[data-bind]')))\n    .forEach(el => {\n      tags.forEach((tag, i) => {\n        const dataset = el.dataset[tag];\n        if (dataset == null) return;\n\n        const observed = i > 0;\n        const bind = i > 1;\n        if (dataset) {\n          let pairs = dataset.split(' ');\n          pairs.forEach(id => {\n            const [name, key] = id.split(':');\n            if (key) {\n              // Record a named property action.\n              t(key, observed, bind).call({ el, name });\n            } else {\n              t(name, observed, bind).call({ el });\n            }\n          });\n        } else {\n          t(index, observed, bind).call({ el });\n        }\n        index++;\n      });\n    });\n  return fragment;\n}\n"],"names":["api","action","fill","elementRef","template","noclone","tpl","fragment","content","index","concat","Array","from","root","querySelectorAll","forEach","el","tags","tag","i","dataset","bind","split","id","name","key","t","observed","call","recordDataAttributes","document","querySelector","props","keyedActions","propNameArg","runAction","keys","propName","elProps","nodeType","length","handleAction","createAction","execAction","Object"],"mappings":"mFAGA,MAAqBA,EAAIC,OAoClB,SAASC,EAAKC,GACnB,OAAOC,EAASD,GAAY,GASvB,SAASC,EAASD,EAAYE,GACnC,OAAOC,GAAI,IAQb,SAA8BC,GAC5B,MAAaA,EAASC,SAAWD,EACjC,IAAIE,EAAQ,EA2BZ,MA1BA,CAACF,GACEG,OAAOC,MAAMC,KAAKC,EAAKC,iBAAiB,mCACxCC,SAAQC,IACPC,EAAKF,SAAQ,CAACG,EAAKC,KACjB,MAAgBH,EAAGI,QAAQF,GAC3B,GAAe,MAAXE,EAAiB,OAErB,MAAiBD,EAAI,EACfE,EAAOF,EAAI,EACbC,EACUA,EAAQE,MAAM,KACpBP,SAAQQ,IACZ,MAAOC,EAAMC,GAAOF,EAAGD,MAAM,KACzBG,EAEFC,EAAED,EAAKE,EAAUN,GAAMO,KAAK,CAAEZ,GAAAA,EAAIQ,KAAAA,IAElCE,EAAEF,EAAMG,EAAUN,GAAMO,KAAK,CAAEZ,GAAAA,OAInCU,EAAEjB,EAAOkB,EAAUN,GAAMO,KAAK,CAAEZ,GAAAA,IAElCP,UAGCF,EAnCEsB,CADQC,SAASC,cAAc5B,KAErCE,GAjDLL,EAAIC,OAAS,CAACA,EAAQ+B,EAAOC,KAC3B,MAAqB,CAACC,EAAaC,IAC1B,CAACV,EAAKN,EAAGiB,KACd,IAAIC,EAAWH,GAAgBE,GAAQX,EAKvC,MAFiB,MAAbY,GAAiC,SAAbA,IAAqBA,EAAW,MAEjDF,EAAUV,EAAKY,IAI1B,MAAO,CAACZ,EAAKY,KACX,IAAIC,EAAUN,EAAMP,GACpB,IACEa,GACmB,iBAAZA,GACNA,EAAQC,UACRD,EAAQE,OAQUC,EACjBJ,EACAK,EAAazC,EAAQ+B,EAAOC,GAE9BU,CAAWlB,OAXX,CACA,MAAmBgB,EACjBJ,EACAK,EAAazC,EAAQqC,EAASL,IAEhCW,OAAOR,KAAKE,GAASvB,QAAQ4B,MA4BnC,MAAa,CAAC,IAAK,IAAK"}