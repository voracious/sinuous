{"version":3,"file":"render.js","sources":["../render/src/render.js","../render/src/index.js"],"sourcesContent":["import { api } from 'sinuous';\nimport { template, t } from 'sinuous/template';\n\nconst cache = {};\n\n/**\n * Create a sinuous `treeify` function.\n * @param  {boolean} isSvg\n * @return {Function}\n */\nexport function context(isSvg) {\n  const h = (isSvg ? api.hs : api.h).bind();\n\n  h.wrap = function() {\n    const createElement = this;\n    const args = Array.from(arguments);\n    const statics = args[0];\n    const fields = args.slice(1);\n\n    for (let i = 1; i < args.length; i++) {\n      args[i] = x(i - 1);\n    }\n\n    function templateResult() {\n      const { endMark } = this || {};\n      const tplKey = statics.join('\\0');\n\n      let tpl = cache[tplKey];\n      if (!tpl) {\n        tpl = template(() => createElement.apply(null, args));\n        cache[tplKey] = tpl;\n      }\n\n      // A template result is attached to a mark in the DOM.\n      // Only this mark can re-use the template result without cloning.\n      templateResult._endMark = templateResult._endMark || endMark;\n      let clone = endMark && templateResult._endMark !== endMark;\n\n      // A template can only be used once, after it must be cloned.\n      if (tpl._endMark) clone = tpl._endMark !== endMark;\n      else tpl._endMark = endMark;\n\n      return tpl(fields, !clone);\n    }\n    return templateResult;\n  };\n\n  return h;\n}\n\nexport function render(value, el) {\n  el._endMark = el._endMark || api.add(el, '');\n  el._current = api.insert(el, value, el._endMark, el._current);\n}\n\nexport function x(tagIndex) {\n  return t(tagIndex);\n}\n","import htm from 'sinuous/htm';\nimport { context } from './render.js';\nexport { render, x } from './render.js';\n\nexport const r = context();\nexport const rs = context(true);\n\n// `export const html = htm.bind(h)` is not tree-shakeable!\nexport function rhtml() {\n  return htm.apply(r, arguments);\n}\n\n// `export const svg = htm.bind(hs)` is not tree-shakeable!\nexport function rsvg() {\n  return htm.apply(rs, arguments);\n}\n"],"names":["context","isSvg","api","hs","h","bind","wrap","this","args","Array","from","arguments","statics","fields","slice","i","length","x","templateResult","endMark","tplKey","join","tpl","cache","template","createElement","apply","_endMark","clone","render","value","el","add","_current","insert","tagIndex","t","rs","rhtml","htm","r","rsvg"],"mappings":"2GAGA,MAAc,GAOP,SAASA,EAAQC,GACtB,OAAWA,EAAQC,EAAIC,GAAKD,EAAIE,GAAGC,OAoCnC,OAlCAD,EAAEE,KAAO,WACP,MAAsBC,KAChBC,EAAOC,MAAMC,KAAKC,WAClBC,EAAUJ,EAAK,GACfK,EAASL,EAAKM,MAAM,GAE1B,IAAK,IAAIC,EAAI,EAAGA,EAAIP,EAAKQ,OAAQD,IAC/BP,EAAKO,GAAKE,EAAEF,EAAI,GAGlB,SAASG,IACP,MAAMC,QAAEA,GAAYZ,MAAQ,GACtBa,EAASR,EAAQS,KAAK,MAE5B,IAAIC,EAAMC,EAAMH,GACXE,IACHA,EAAME,GAAS,IAAMC,EAAcC,MAAM,KAAMlB,KAC/Ce,EAAMH,GAAUE,GAKlBJ,EAAeS,EAAWT,EAAeS,GAAYR,EACrD,IAAIS,EAAQT,GAAWD,EAAeS,IAAaR,EAMnD,OAHIG,EAAIK,EAAUC,EAAQN,EAAIK,IAAaR,EACtCG,EAAIK,EAAWR,EAEbG,EAAIT,GAASe,GAEtB,OAAOV,GAGFd,EAGF,SAASyB,EAAOC,EAAOC,GAC5BA,EAAGJ,EAAWI,EAAGJ,GAAYzB,EAAI8B,IAAID,EAAI,IACzCA,EAAGE,EAAW/B,EAAIgC,OAAOH,EAAID,EAAOC,EAAGJ,EAAUI,EAAGE,GAG/C,SAAShB,EAAEkB,GAChB,OAAOC,EAAED,GCpDC,MAAKnC,IACJqC,EAAKrC,GAAQ,GAGnB,SAASsC,IACd,OAAOC,EAAIb,MAAMc,EAAG7B,WAIf,SAAS8B,IACd,OAAOF,EAAIb,MAAMW,EAAI1B"}